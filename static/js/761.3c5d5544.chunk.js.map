{"version":3,"file":"static/js/761.3c5d5544.chunk.js","mappings":"oMAEe,SAASA,EAAT,GAA+B,IAARC,EAAO,EAAPA,IACpC,OAAO,wBAAKA,GACb,C,6HCCc,SAASC,IACtB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KASA,OAPAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,GAAqBN,GAASO,MAAK,YAAkB,IAAfC,EAAc,EAAdA,QACpCJ,EAAWI,EACZ,GACF,GAAE,CAACR,KAIF,8BACGG,IACC,8BACGA,EAAQM,OAAS,GAChB,yBACGN,EAAQO,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,GAAIC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC1B,OACE,2BACE,0BAAKD,EAAL,QACA,6BAAKC,EAAL,SAFOF,EAKZ,OAGH,SAAC,UAAD,CAAab,IAAI,mCAM5B,C,sLCtCKgB,EAAU,mCACVC,EAAW,+BAAjB,SAEeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,2GAA2BC,EAA3B,+BAAiC,GAAIC,EAArC,+BAA8C,CAAC,EAA/C,SACyBC,MAAMF,EAAKC,GADpC,YACQE,EADR,QAEkBC,GAFlB,iCAGYD,EAASE,OAHrB,gDAIMC,QAAQC,OAAO,IAAIC,MAAM,cAJ/B,2GAOO,SAASC,IACd,OAAOV,EAAY,GAAD,OACbD,EADa,uCAC0BD,GAE7C,CAEM,SAASa,EAAgBC,GAC9B,OAAOZ,EAAY,GAAD,OACbD,EADa,+BACkBa,EADlB,oBACmCd,EADnC,8CAGnB,CAEM,SAASe,EAAW7B,GACzB,OAAOgB,EAAY,GAAD,OACbD,EADa,kBACKf,EADL,oBACwBc,GAE3C,CAEM,SAASgB,EAAQ9B,GACtB,OAAOgB,EAAY,GAAD,OACbD,EADa,kBACKf,EADL,4BACgCc,GAEnD,CAEM,SAASiB,EAAW/B,GACzB,OAAOgB,EAAY,GAAD,OACbD,EADa,kBACKf,EADL,4BACgCc,GAEnD,C,sBCtCD,SAASkB,EAAmBC,EAAKC,EAASV,EAAQW,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAON,EAAII,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOC,GAEP,YADAjB,EAAOiB,EAET,CAEIF,EAAKG,KACPR,EAAQM,GAERjB,QAAQW,QAAQM,GAAOjC,KAAK4B,EAAOC,EAEvC,CAEe,SAASO,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIzB,SAAQ,SAAUW,EAASV,GACpC,IAAIS,EAAMW,EAAGK,MAAMJ,EAAME,GAEzB,SAASZ,EAAMK,GACbR,EAAmBC,EAAKC,EAASV,EAAQW,EAAOC,EAAQ,OAAQI,EAClE,CAEA,SAASJ,EAAOc,GACdlB,EAAmBC,EAAKC,EAASV,EAAQW,EAAOC,EAAQ,QAASc,EACnE,CAEAf,OAAMgB,EACR,GACF,CACF,C","sources":["components/NotFoundMsg/NotFoundMsg.js","pages/Reviews/Reviews.js","services/movies-api.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import PropTypes from 'prop-types';\n\nexport default function NotFoundMsg({ msg }) {\n  return <h2>{msg}</h2>;\n}\n\nNotFoundMsg.propTypes = {\n  msg: PropTypes.string.isRequired,\n};","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport * as moviesAPI from '../../services/movies-api';\nimport NotFoundMsg from '../../components/NotFoundMsg/NotFoundMsg';\n\nexport default function Reviews() {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    moviesAPI.getReviews(movieId).then(({ results }) => {\n      setReviews(results);\n    });\n  }, [movieId]);\n\n\n  return (\n    <>\n      {reviews && (\n        <>\n          {reviews.length > 0 ? (\n            <div>\n              {reviews.map(({ id, author, content }) => {\n                return (\n                  <li key={id}>\n                    <h3>{author}:</h3>\n                    <p>\"{content}\"</p>\n                  </li>\n                );\n              })}\n            </div>\n          ) : (\n            <NotFoundMsg msg=\"No Reviews on this movie...\" />\n          )}\n        </>\n      )}\n    </>\n  );\n};\n//   return (\n//     <>\n//       {reviews.length > 0 ? (\n//         <ul>\n//           {reviews.map(({ id, author, content }) => (\n//             <li key={id}>\n//               <p>Author: {author}</p>\n//               <p>Reviews: {content}</p>\n//             </li>\n//           ))}\n//         </ul>\n//       ) : (\n//         <NotFoundMsg msg=\"No Reviews on this movie...\" />\n//       )}\n//     </>\n//   );\n// }","const API_KEY = 'e42728a38336df3d5b4e4643fa430ed7';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nasync function fetchMovies(url = '', config = {}) {\n  const response = await fetch(url, config);\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error('Not Found'));\n};\n\nexport function getTrending() {\n  return fetchMovies(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n  );\n};\n\nexport function getMoviesSearch(query) {\n  return fetchMovies(\n    `${BASE_URL}/search/movie?query=${query}&api_key=${API_KEY}&language=en-US&page=1&include_adult=false`\n  )\n};\n\nexport function getMovieId(movieId) {\n  return fetchMovies(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`\n  )\n};\n\nexport function getCast(movieId) {\n  return fetchMovies(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`\n  )\n};\n\nexport function getReviews(movieId) {\n  return fetchMovies(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`\n  )\n};","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["NotFoundMsg","msg","Reviews","movieId","useParams","useState","reviews","setReviews","useEffect","moviesAPI","then","results","length","map","id","author","content","API_KEY","BASE_URL","fetchMovies","url","config","fetch","response","ok","json","Promise","reject","Error","getTrending","getMoviesSearch","query","getMovieId","getCast","getReviews","asyncGeneratorStep","gen","resolve","_next","_throw","key","arg","info","value","error","done","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}