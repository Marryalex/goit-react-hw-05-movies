{"version":3,"file":"static/js/375.5e1caa0b.chunk.js","mappings":"oMAEe,SAASA,EAAT,GAA+B,IAARC,EAAO,EAAPA,IACpC,OAAO,wBAAKA,GACb,C,sICEc,SAASC,IACtB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAQA,OANAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,GAAkBN,GAASO,MAAK,YAAe,IAAZJ,EAAW,EAAXA,KACjCC,EAAQD,EACT,GACF,GAAE,CAACH,KAGF,8BACGG,EAAKK,OAAS,GACb,wBACGL,EAAKM,KAAI,SAAAC,GAAE,OACV,2BACE,gBAAKC,KAAKC,EAAAA,EAAAA,GAAOF,GAAKG,IAAKH,EAAGI,KAAMC,MAAO,OAC3C,uBAAIL,EAAGI,SAFAJ,EAAGM,GADF,OAQd,SAAC,UAAD,CAAalB,IAAI,qBAIxB,C,kCC/BKmB,EAAU,kCAWhB,IATe,SAAAP,GACb,OAAIA,EAAGQ,aACC,GAAN,OAAUD,EAAUP,EAAGQ,cACdR,EAAGS,YACN,GAAN,OAAUF,EAAUP,EAAGS,aAElBC,CACR,C,sLCVKC,EAAU,mCACVC,EAAW,+BAAjB,SAEeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,2GAA2BC,EAA3B,+BAAiC,GAAIC,EAArC,+BAA8C,CAAC,EAA/C,SACyBC,MAAMF,EAAKC,GADpC,YACQE,EADR,QAEkBC,GAFlB,iCAGYD,EAASE,OAHrB,gDAIMC,QAAQC,OAAO,IAAIC,MAAM,cAJ/B,2GAOO,SAASC,IACd,OAAOV,EAAY,GAAD,OACbD,EADa,uCAC0BD,GAE7C,CAEM,SAASa,EAAgBC,GAC9B,OAAOZ,EAAY,GAAD,OACbD,EADa,+BACkBa,EADlB,oBACmCd,EADnC,8CAGnB,CAEM,SAASe,EAAWpC,GACzB,OAAOuB,EAAY,GAAD,OACbD,EADa,kBACKtB,EADL,oBACwBqB,GAE3C,CAEM,SAASgB,EAAQrC,GACtB,OAAOuB,EAAY,GAAD,OACbD,EADa,kBACKtB,EADL,4BACgCqB,GAEnD,CAEM,SAASiB,EAAWtC,GACzB,OAAOuB,EAAY,GAAD,OACbD,EADa,kBACKtB,EADL,4BACgCqB,GAEnD,C,gHCtCD,SAASkB,EAAmBC,EAAKC,EAASV,EAAQW,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAON,EAAII,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOC,GAEP,YADAjB,EAAOiB,EAET,CAEIF,EAAKG,KACPR,EAAQM,GAERjB,QAAQW,QAAQM,GAAOxC,KAAKmC,EAAOC,EAEvC,CAEe,SAASO,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIzB,SAAQ,SAAUW,EAASV,GACpC,IAAIS,EAAMW,EAAGK,MAAMJ,EAAME,GAEzB,SAASZ,EAAMK,GACbR,EAAmBC,EAAKC,EAASV,EAAQW,EAAOC,EAAQ,OAAQI,EAClE,CAEA,SAASJ,EAAOc,GACdlB,EAAmBC,EAAKC,EAASV,EAAQW,EAAOC,EAAQ,QAASc,EACnE,CAEAf,OAAMgB,EACR,GACF,CACF,C","sources":["components/NotFoundMsg/NotFoundMsg.js","pages/Cast/Cast.js","services/getImg.js","services/movies-api.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import PropTypes from 'prop-types';\n\nexport default function NotFoundMsg({ msg }) {\n  return <h2>{msg}</h2>;\n}\n\nNotFoundMsg.propTypes = {\n  msg: PropTypes.string.isRequired,\n};","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport * as moviesAPI from '../../services/movies-api';\nimport NotFoundMsg from '../../components/NotFoundMsg/NotFoundMsg';\nimport getImg from '../../services/getImg';\n\nexport default function Cast() {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    moviesAPI.getCast(movieId).then(({ cast }) => {\n      setCast(cast);\n    });\n  }, [movieId]);\n\n  return (\n    <>\n      {cast.length > 0 ? (\n        <ul>\n          {cast.map(el => (\n            <li key={el.id}>\n              <img src={getImg(el)} alt={el.name} width={150} />\n              <p>{el.name}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <NotFoundMsg msg=\"No Cast found !\" />\n      )}\n    </>\n  );\n}","import noImg from '../images/image-not-found.png';\nconst IMG_URL = 'https://image.tmdb.org/t/p/w500';\n\nconst getImg = el => {\n  if (el.profile_path) {\n    return `${IMG_URL + el.profile_path}`;\n  } else if (el.poster_path) {\n    return `${IMG_URL + el.poster_path}`;\n  }\n  return noImg;\n};\n\nexport default getImg;","const API_KEY = 'e42728a38336df3d5b4e4643fa430ed7';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nasync function fetchMovies(url = '', config = {}) {\n  const response = await fetch(url, config);\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error('Not Found'));\n};\n\nexport function getTrending() {\n  return fetchMovies(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n  );\n};\n\nexport function getMoviesSearch(query) {\n  return fetchMovies(\n    `${BASE_URL}/search/movie?query=${query}&api_key=${API_KEY}&language=en-US&page=1&include_adult=false`\n  )\n};\n\nexport function getMovieId(movieId) {\n  return fetchMovies(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`\n  )\n};\n\nexport function getCast(movieId) {\n  return fetchMovies(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`\n  )\n};\n\nexport function getReviews(movieId) {\n  return fetchMovies(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`\n  )\n};","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["NotFoundMsg","msg","Cast","movieId","useParams","useState","cast","setCast","useEffect","moviesAPI","then","length","map","el","src","getImg","alt","name","width","id","IMG_URL","profile_path","poster_path","noImg","API_KEY","BASE_URL","fetchMovies","url","config","fetch","response","ok","json","Promise","reject","Error","getTrending","getMoviesSearch","query","getMovieId","getCast","getReviews","asyncGeneratorStep","gen","resolve","_next","_throw","key","arg","info","value","error","done","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}