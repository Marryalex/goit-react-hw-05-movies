{"version":3,"file":"static/js/959.5aa790a0.chunk.js","mappings":"+OACA,EAAuB,+B,SCmBvB,E,OAlBqBA,GAAAA,OAAH,0U,SCOH,SAASC,IACtB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,GAAqBV,GAClBW,MAAK,SAAAC,GAAQ,OAAIR,EAASQ,EAAb,GACjB,GAAE,CAACZ,IAKJ,OACE,iCACE,SAAC,EAAD,CAAca,KAAK,SAASC,QALV,WAAO,IAAD,IAACT,EAAQ,iBAACE,QAAD,IAACA,GAAD,UAACA,EAAUQ,aAAX,aAAC,EAAiBC,YAAlB,QAA0B,IAAK,EAKhE,2BAGA,kBACCb,IACC,iCACE,gBAAKc,KAAKC,EAAAA,EAAAA,GAAOf,GAAQgB,MAAO,IAAKC,IAAKjB,EAAMkB,SAChD,0BACGlB,EAAMkB,MADT,KACkBlB,EAAMmB,aAAaC,OAAO,EAAG,GAD/C,QAGA,0BACE,wCACsB,GAArBpB,EAAMqB,aAAoB,QAE7B,0BACE,sCACCrB,EAAMsB,aAET,0BACE,oCAECtB,EAAMuB,OAAOC,QAAO,SAAUC,EAAKC,GAClC,OAAOD,EAAM,IAAMC,EAAOC,IAC3B,GAAE,WAIT,mBACA,oDACA,2BACA,yBACI,SAAC,KAAD,CACEC,GAAI,OACJhB,MAAOR,EAASQ,MAChBiB,UAAWC,EAHb,qBAQF,yBACE,SAAC,KAAD,CACEF,GAAI,UACJC,UAAWC,EACXlB,MAAOR,EAASQ,MAHlB,2BAUJ,mBACA,SAAC,KAAD,MAGL,C,kCC9EKmB,EAAU,kCAWhB,IATe,SAAAC,GACb,OAAIA,EAAGC,aACC,GAAN,OAAUF,EAAUC,EAAGC,cACdD,EAAGE,YACN,GAAN,OAAUH,EAAUC,EAAGE,aAElBC,CACR,C,sLCVKC,EAAU,mCACVC,EAAW,+BAAjB,SAEeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,2GAA2BC,EAA3B,+BAAiC,GAAIC,EAArC,+BAA8C,CAAC,EAA/C,SACyBC,MAAMF,EAAKC,GADpC,YACQ/B,EADR,QAEkBiC,GAFlB,iCAGYjC,EAASkC,OAHrB,gDAIMC,QAAQC,OAAO,IAAIC,MAAM,cAJ/B,2GAOO,SAASC,IACd,OAAOT,EAAY,GAAD,OACbD,EADa,uCAC0BD,GAE7C,CAEM,SAASY,EAAgBC,GAC9B,OAAOX,EAAY,GAAD,OACbD,EADa,+BACkBY,EADlB,oBACmCb,EADnC,8CAGnB,CAEM,SAASc,EAAWrD,GACzB,OAAOyC,EAAY,GAAD,OACbD,EADa,kBACKxC,EADL,oBACwBuC,GAE3C,CAEM,SAASe,EAAQtD,GACtB,OAAOyC,EAAY,GAAD,OACbD,EADa,kBACKxC,EADL,4BACgCuC,GAEnD,CAEM,SAASgB,EAAWvD,GACzB,OAAOyC,EAAY,GAAD,OACbD,EADa,kBACKxC,EADL,4BACgCuC,GAEnD,C","sources":["webpack://react-homework-template/./src/pages/MovieDetailsPage/MovieDetailsPage.module.css?9108","pages/MovieDetailsPage/GoBackButton.styled.js","pages/MovieDetailsPage/MovieDetailsPage.js","services/getImg.js","services/movies-api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"link\":\"MovieDetailsPage_link__rhdjc\",\"activeLink\":\"MovieDetailsPage_activeLink__XM0zo\"};","import styled from 'styled-components';\n\nconst GoBackButton = styled.button`\n   {\n    display: inline-block;\n    margin: 15px;\n    width: 120px;\n    height: 40px;\n    border: 1px solid #aaa;\n    opacity: 0.6;\n    font-weight: 600;\n    transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    cursor: pointer;\n    outline: none;\n  }\n  &: hover {\n    opacity: 1;\n  }\n`;\n\nexport default GoBackButton;\n","import { useState, useEffect} from 'react';\nimport { useParams, Outlet } from 'react-router-dom';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport * as moviesAPI from '../../services/movies-api';\nimport { NavLink } from 'react-router-dom';\nimport getImg from '../../services/getImg';\nimport styles from './MovieDetailsPage.module.css';\nimport GoBackButton from './GoBackButton.styled';\n\nexport default function MovieDetailsPage() {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  useEffect(() => {\n    moviesAPI.getMovieId(movieId)\n      .then(response => setMovie(response));\n  }, [movieId]);\n\n  const onGoBackClick = () => {navigate(location?.state?.from ?? '/')}\n\n\n  return (\n    <>\n      <GoBackButton type=\"button\" onClick={onGoBackClick}>\n        &laquo; Go back\n      </GoBackButton>\n      <br />\n      {movie && (\n        <>\n          <img src={getImg(movie)} width={300} alt={movie.title} />\n          <h2>\n            {movie.title} ({movie.release_date.substr(0, 4)})\n          </h2>\n          <p>\n            <b>User score: </b>\n            {movie.vote_average * 10 + '%'}\n          </p>\n          <p>\n            <b>Overview: </b>\n            {movie.overview}\n          </p>\n          <p>\n            <b>Genres: </b>\n\n            {movie.genres.reduce(function (acc, curVal) {\n              return acc + ' ' + curVal.name;\n            }, '')}\n          </p>\n        </>\n      )}\n      <hr />\n      <p>Additional information:</p>\n      <ul>\n      <li>\n          <NavLink\n            to={'cast'}\n            state={location.state}\n            className={styles.link}\n          >\n            Cast\n          </NavLink>\n        </li>\n        <li>\n          <NavLink\n            to={'reviews'}\n            className={styles.link}\n            state={location.state}\n          >\n            Reviews\n          </NavLink>\n        </li>\n   \n      </ul>\n      <hr />\n      <Outlet />\n    </>\n  );\n}\n","import noImg from '../images/image-not-found.png';\nconst IMG_URL = 'https://image.tmdb.org/t/p/w500';\n\nconst getImg = el => {\n  if (el.profile_path) {\n    return `${IMG_URL + el.profile_path}`;\n  } else if (el.poster_path) {\n    return `${IMG_URL + el.poster_path}`;\n  }\n  return noImg;\n};\n\nexport default getImg;","const API_KEY = 'e42728a38336df3d5b4e4643fa430ed7';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nasync function fetchMovies(url = '', config = {}) {\n  const response = await fetch(url, config);\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error('Not Found'));\n};\n\nexport function getTrending() {\n  return fetchMovies(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n  );\n};\n\nexport function getMoviesSearch(query) {\n  return fetchMovies(\n    `${BASE_URL}/search/movie?query=${query}&api_key=${API_KEY}&language=en-US&page=1&include_adult=false`\n  )\n};\n\nexport function getMovieId(movieId) {\n  return fetchMovies(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`\n  )\n};\n\nexport function getCast(movieId) {\n  return fetchMovies(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`\n  )\n};\n\nexport function getReviews(movieId) {\n  return fetchMovies(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`\n  )\n};"],"names":["styled","MovieDetailsPage","movieId","useParams","useState","movie","setMovie","navigate","useNavigate","location","useLocation","useEffect","moviesAPI","then","response","type","onClick","state","from","src","getImg","width","alt","title","release_date","substr","vote_average","overview","genres","reduce","acc","curVal","name","to","className","styles","IMG_URL","el","profile_path","poster_path","noImg","API_KEY","BASE_URL","fetchMovies","url","config","fetch","ok","json","Promise","reject","Error","getTrending","getMoviesSearch","query","getMovieId","getCast","getReviews"],"sourceRoot":""}