{"version":3,"file":"static/js/806.d125f695.chunk.js","mappings":"6OAKe,SAASA,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAA4BC,EAAAA,EAAAA,UAAS,MAArC,eAAOC,EAAP,KAAeC,EAAf,KAQA,OANAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,KAAwBC,MAAK,YAAkB,IAAfC,EAAc,EAAdA,QAC9BJ,EAAUI,EACX,GACF,GAAE,KAGD,gCACGL,IACC,iCACE,4CACA,wBACGA,EAAOM,KAAI,SAAAC,GAAK,OACf,yBACE,SAAC,KAAD,CAAMC,GAAE,iBAAYD,EAAME,IAAMC,MAAO,CAACC,KAAMd,GAA9C,SACGU,EAAMK,SAFFL,EAAME,GADA,UAWvB,SAAC,KAAD,MAGL,C,sLCnCKI,EAAU,mCACVC,EAAW,+BAAjB,SAEeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,2GAA2BC,EAA3B,+BAAiC,GAAIC,EAArC,+BAA8C,CAAC,EAA/C,SACyBC,MAAMF,EAAKC,GADpC,YACQE,EADR,QAEkBC,GAFlB,iCAGYD,EAASE,OAHrB,gDAIMC,QAAQC,OAAO,IAAIC,MAAM,cAJ/B,2GAOO,SAASC,IACd,OAAOV,EAAY,GAAD,OACbD,EADa,uCAC0BD,GAE7C,CAEM,SAASa,EAAgBC,GAC9B,OAAOZ,EAAY,GAAD,OACbD,EADa,+BACkBa,EADlB,oBACmCd,EADnC,8CAGnB,CAEM,SAASe,EAAWC,GACzB,OAAOd,EAAY,GAAD,OACbD,EADa,kBACKe,EADL,oBACwBhB,GAE3C,CAEM,SAASiB,EAAQD,GACtB,OAAOd,EAAY,GAAD,OACbD,EADa,kBACKe,EADL,4BACgChB,GAEnD,CAEM,SAASkB,EAAWF,GACzB,OAAOd,EAAY,GAAD,OACbD,EADa,kBACKe,EADL,4BACgChB,GAEnD,C,sBCtCD,SAASmB,EAAmBC,EAAKC,EAASX,EAAQY,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAON,EAAII,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOC,GAEP,YADAlB,EAAOkB,EAET,CAEIF,EAAKG,KACPR,EAAQM,GAERlB,QAAQY,QAAQM,GAAOpC,KAAK+B,EAAOC,EAEvC,CAEe,SAASO,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAI1B,SAAQ,SAAUY,EAASX,GACpC,IAAIU,EAAMW,EAAGK,MAAMJ,EAAME,GAEzB,SAASZ,EAAMK,GACbR,EAAmBC,EAAKC,EAASX,EAAQY,EAAOC,EAAQ,OAAQI,EAClE,CAEA,SAASJ,EAAOc,GACdlB,EAAmBC,EAAKC,EAASX,EAAQY,EAAOC,EAAQ,QAASc,EACnE,CAEAf,OAAMgB,EACR,GACF,CACF,C","sources":["pages/HomePage/HomePage.js","services/movies-api.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { Link, Outlet } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\nimport * as moviesAPI from '../../services/movies-api';\n\nexport default function HomePage() {\n  const location = useLocation();\n  const [movies, setMovies] = useState(null);\n\n  useEffect(() => {\n    moviesAPI.getTrending().then(({ results }) => {\n      setMovies(results);\n    });\n  }, []);\n\n  return (\n    <>\n      {movies && (\n        <>\n          <h2>Trending today</h2>\n          <ul>\n            {movies.map(movie => (\n              <li key={movie.id}>\n                <Link to={`movies/${movie.id}`} state={{from: location }}>\n                  {movie.title}\n                </Link>\n              </li>\n            ))}\n          </ul>\n          \n        </>\n      )}\n      <Outlet/>\n    </>\n  );\n}","const API_KEY = 'e42728a38336df3d5b4e4643fa430ed7';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nasync function fetchMovies(url = '', config = {}) {\n  const response = await fetch(url, config);\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error('Not Found'));\n};\n\nexport function getTrending() {\n  return fetchMovies(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n  );\n};\n\nexport function getMoviesSearch(query) {\n  return fetchMovies(\n    `${BASE_URL}/search/movie?query=${query}&api_key=${API_KEY}&language=en-US&page=1&include_adult=false`\n  )\n};\n\nexport function getMovieId(movieId) {\n  return fetchMovies(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`\n  )\n};\n\nexport function getCast(movieId) {\n  return fetchMovies(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`\n  )\n};\n\nexport function getReviews(movieId) {\n  return fetchMovies(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`\n  )\n};","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["HomePage","location","useLocation","useState","movies","setMovies","useEffect","moviesAPI","then","results","map","movie","to","id","state","from","title","API_KEY","BASE_URL","fetchMovies","url","config","fetch","response","ok","json","Promise","reject","Error","getTrending","getMoviesSearch","query","getMovieId","movieId","getCast","getReviews","asyncGeneratorStep","gen","resolve","_next","_throw","key","arg","info","value","error","done","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}