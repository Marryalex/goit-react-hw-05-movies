{"version":3,"file":"static/js/215.77a3c87d.chunk.js","mappings":"4PAEaA,EAAaC,EAAAA,GAAAA,KAAH,gIAQVC,EAAmBD,EAAAA,GAAAA,OAAH,sTAiBhBE,EAAkBF,EAAAA,GAAAA,MAAH,uU,SClBb,SAASG,IACtB,OAAsCC,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAcF,EAAaG,IAAI,UAC/BC,GAAWC,EAAAA,EAAAA,MAiBjB,OAPAC,EAAAA,EAAAA,YAAU,WACHJ,GACLK,EAAAA,GAA0BL,GAAaM,MAAK,YAAkB,IAAfC,EAAc,EAAdA,QACvCX,EAAeW,EAChB,GACR,GAAE,CAACP,KAGF,iCACE,UAACX,EAAD,CAAYmB,SAjBK,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,OACTC,EAAQF,EAAKG,SAAS,GAAGC,MAC/BhB,EAAgB,CAAEiB,OAAQH,IAC1BF,EAAKM,OACN,EAWG,WACE,SAACzB,EAAD,CAAiB0B,KAAK,OAAOC,KAAK,YAAYC,aAAa,MACzDC,WAAS,EACTC,YAAY,oBACd,SAAC/B,EAAD,CAAkB2B,KAAK,SAAvB,wBAEF,wBACGvB,GACCA,EAAY4B,KAAI,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,GAAV,OACd,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,GAAME,MAAO,CAACC,KAAM1B,GAAzC,SAAqDsB,KAD9CC,EADK,QAQzB,C,sLChDKI,EAAU,mCACVC,EAAW,+BAAjB,SAEeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,2GAA2BC,EAA3B,+BAAiC,GAAIC,EAArC,+BAA8C,CAAC,EAA/C,SACyBC,MAAMF,EAAKC,GADpC,YACQE,EADR,QAEkBC,GAFlB,iCAGYD,EAASE,OAHrB,gDAIMC,QAAQC,OAAO,IAAIC,MAAM,cAJ/B,2GAOO,SAASC,IACd,OAAOV,EAAY,GAAD,OACbD,EADa,uCAC0BD,GAE7C,CAEM,SAASa,EAAgB7B,GAC9B,OAAOkB,EAAY,GAAD,OACbD,EADa,+BACkBjB,EADlB,oBACmCgB,EADnC,8CAGnB,CAEM,SAASc,EAAWC,GACzB,OAAOb,EAAY,GAAD,OACbD,EADa,kBACKc,EADL,oBACwBf,GAE3C,CAEM,SAASgB,EAAQD,GACtB,OAAOb,EAAY,GAAD,OACbD,EADa,kBACKc,EADL,4BACgCf,GAEnD,CAEM,SAASiB,EAAWF,GACzB,OAAOb,EAAY,GAAD,OACbD,EADa,kBACKc,EADL,4BACgCf,GAEnD,C","sources":["pages/MoviesPage/MoviesPage.styled.js","pages/MoviesPage/MoviesPage.js","services/movies-api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const SearchForm = styled.form`\n   {\n    display: flex;\n    align-items: center;\n    width: 100%;\n    background-color: #fff;\n  }\n`;\nexport const SearchFormButton = styled.button`\n   {\n    display: inline-block;\n    width: 80px;\n    height: 40px;\n    border: 1px solid #aaa;\n    opacity: 0.6;\n    font-weight: 600;\n    transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    cursor: pointer;\n    outline: none;\n  }\n  &: hover {\n    opacity: 1;\n  }\n`;\n\nexport const SearchFormInput = styled.input`\n   {\n    display: inline-block;\n    width: 300px;\n    height: 40px;\n    margin: 15px;\n    font: inherit;\n    font-size: 20px;\n    border: 1px solid #ccc;\n    outline: none;\n    padding-left: 4px;\n    padding-right: 4px;\n  }\n  & :placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n","import { useState, useEffect } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport * as moviesAPI from '../../services/movies-api';\nimport {\n  SearchForm,\n  SearchFormButton,\n  SearchFormInput,\n} from './MoviesPage.styled.js';\n\nexport default function MoviesPage (){\n  const [searchMovie, setSearchMovie] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const querySearch = searchParams.get('search');\n  const location = useLocation();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.target;\n    const query = form.elements[0].value;\n    setSearchParams({ search: query });\n    form.reset();\n  };\n\n  useEffect(() => {\n    if (!querySearch) return;\n    moviesAPI.getMoviesSearch(querySearch).then(({ results }) => {\n            setSearchMovie(results);\n          });\n  }, [querySearch]);\n\n  return (\n    <>\n      <SearchForm onSubmit={handleSubmit}>\n        <SearchFormInput type=\"text\" name=\"movieName\" autocomplete=\"off\"\n          autoFocus\n          placeholder=\"Search movies \"/>\n        <SearchFormButton type=\"submit\">Search</SearchFormButton>\n        </SearchForm>\n      <ul>\n        {searchMovie &&\n          searchMovie.map(({ title, id }) => (\n            <li key={id}>\n              <Link to={`/movies/${id}`} state={{from: location}}>{title}</Link>\n            </li>\n          ))}\n      </ul>\n    </>\n  );\n};\n","const API_KEY = 'e42728a38336df3d5b4e4643fa430ed7';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nasync function fetchMovies(url = '', config = {}) {\n  const response = await fetch(url, config);\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error('Not Found'));\n};\n\nexport function getTrending() {\n  return fetchMovies(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n  );\n};\n\nexport function getMoviesSearch(query) {\n  return fetchMovies(\n    `${BASE_URL}/search/movie?query=${query}&api_key=${API_KEY}&language=en-US&page=1&include_adult=false`\n  )\n};\n\nexport function getMovieId(movieId) {\n  return fetchMovies(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`\n  )\n};\n\nexport function getCast(movieId) {\n  return fetchMovies(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`\n  )\n};\n\nexport function getReviews(movieId) {\n  return fetchMovies(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`\n  )\n};"],"names":["SearchForm","styled","SearchFormButton","SearchFormInput","MoviesPage","useState","searchMovie","setSearchMovie","useSearchParams","searchParams","setSearchParams","querySearch","get","location","useLocation","useEffect","moviesAPI","then","results","onSubmit","e","preventDefault","form","target","query","elements","value","search","reset","type","name","autocomplete","autoFocus","placeholder","map","title","id","to","state","from","API_KEY","BASE_URL","fetchMovies","url","config","fetch","response","ok","json","Promise","reject","Error","getTrending","getMoviesSearch","getMovieId","movieId","getCast","getReviews"],"sourceRoot":""}